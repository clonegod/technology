BeanFactory 的几种子接口
    BeanFactory               提供获取Bean的接口，getBean(String name), getBean(String name, Class<T> requiredType)...
    HierarchicalBeanFactory   提供BeanFactory的父子关系接口，getParentBeanFactory()
    ListableBeanFactory       提供从BeanFactory获取Bean相关信息的接口，getBeanDefinitionNames(), getBeansWithAnnotation()...  
    
XmlWebApplicationContext 的继承关系
    BeanFactory                                     顶级接口
        HierarchicalBeanFactory                     BeanFactory父子层级关系
        ListableBeanFactory                         获取BeanDefinition相关信息
    ApplicationContext                              顶级Context接口
    ConfigurableApplicationContext                  声明refresh()
    AbstractApplicationContext                      实现refresh()调用流程，声明refreshBeanFactory()
    AbstractRefreshableApplicationContext           实现refreshBeanFactory()调用流程
    AbstractRefreshableConfigApplicationContext     实现bean 的xml configLocations的解析
    AbstractRefreshableWebApplicationContext        提供ServletContext的获取接口  
    XmlWebApplicationContext
    
    
Bean 从哪里来的？
    从BeanFactory来的，spring 容器在启动时，首先要做的就是从configLocation读取配置文件，加载并解析得到BeanDefinition，然后放入到BeanFactory中。
    AbstractApplicationContext.refresh() -> obtainFreshBeanFactory() -> refreshBeanFactory() -> loadBeanDefinitions() -> getBeanFactory()
    
BeanFactory 从哪儿来的？
    AbstractApplicationContext.refresh()调用时，通过getBeanFactory()得到的
    AbstractApplicationContext.refresh() -> obtainFreshBeanFactory() -> -> refreshBeanFactory() -> loadBeanDefinitions() -> getBeanFactory()

FactoryBean 是什么？
    FactoryBean 首先，它是一个Bean，同时，它也是一个Factory，可以创建其它的Bean。
    a BeanFactory which are themselves factories.
    
Singleton Bean是何时被实例化的？
    在BeanFactory构建完成后，会调用finishBeanFactoryInitialization() -> preInstantiateSingletons() -> getBean()，对所有单例Bean进行实例化，放入缓存中。
    
AbstractApplicationContext 的继承关系？   
    AbstractApplicationContext implements ConfigurableApplicationContext extends ApplicationContext extends BeanFactory

AbstractApplicationContext 中重要的方法？
    refresh() // 使用模板方法模式，定义了IOC容器的初始化流程
    refreshBeanFactory()  // 抽象方法，由子类实现
    
refresh() 在哪个接口中声明的？
    ConfigurableApplicationContext  声明了refresh接口

# 基于注解的WebApplicationContext    
AnnotationConfigWebApplicationContext extends AbstractApplicationContext    
    
Spring 容器的初始化流程？
    
    # 容器启动事件
    ContextLoaderListener -> contextInitialized() -> initWebApplicationContext() -> configureAndRefreshWebApplicationContext() -> ConfigurableWebApplicationContext.refresh()

    # Servlet初始化
    FrameworkServlet.init() -> initServletBean() -> initWebApplicationContext() -> configureAndRefreshWebApplicationContext() 
       -> if (!cwac.isActive()) -> ConfigurableApplicationContext.refresh()
       -> onRefresh(wac)
       
    # 初始化MVC相关组件   
    DispatchServlet.onRefresh() -> initStrategies() -> initHandlerMappings() / initHandlerAdapters() / initViewResolvers()
    
     
    
DispatchServlet 处理HTTP请求的流程？
    FrameworkServlet.doGet() / doPost() -> processRequest() -> doService()
    DispatchServlet.doService() -> doDispatch() 
        -> getHandler() // 返回handler以及它的相关interceptor 
        -> getHandlerAdapter() 
        -> mappedHandler.applyPreHandle()
        -> hanlderAdpater.handle() // 返回一个ModelAndView
        -> mappedHandler.applyPostHandle()
        -> processDispatchResult()  -> render()  
        -> mappedHandler.triggerAfterCompletion() 
        


    